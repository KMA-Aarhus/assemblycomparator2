# This subpipeline checks if the void report flag (.asscom2_void_report.flag) file has been modified by a rule in the parent pipeline. If so, the report will be rendered.


out_base = config['out_base']
base_variable = config['base_variable']
batch_title = config['batch_title']


print('report subpipeline: out_base:', out_base)
print('report subpipeline: base_variable:', base_variable)


rule all:
	input: expand("{out_base}/report_{batch_title}.html", out_base = out_base, batch_title = batch_title)


# Runs on the front end because it is quick anyway, and it sucks having to wait for the job scheduler.
rule report:
	input: "{out_base}/.asscom2_void_report.flag" # This is the file being touched when void_report is called in every rule in the parent pipeline.
	conda: f"{base_variable}/conda_envs/r-markdown.yaml"
	output: "{out_base}/report_{batch_title}.html"
	shell: """

		echo "report subpipeline: initializing report ..."
	
		# The rmd will run from the wd where the template is located. Therefore we need to copy it into here before rendering.
		cp {base_variable}/scripts/genomes_to_report_v2.Rmd rmarkdown_template.rmd
		Rscript -e 'rmarkdown::render("rmarkdown_template.rmd", "html_document", output_file = "{output}", quiet = T)' 
		rm rmarkdown_template.rmd
		
		
		# Use the end script if it exists
		end_script={wildcards.out_base}/report_subpipeline/scripts/end_script.sh
		if test -f "$end_script"; then
		    echo "report subpipeline: end_script exists."
		    ./$end_script {batch_title} output_asscom2/report_{batch_title}.html 
		fi
		
		
		# Create a zip archive of the report
		cd output_asscom2
		zip {output}.zip report_{batch_title}.html || echo failed to zip
		
		


		echo "report subpipeline: report written to {output}"
		echo "    ______________________________  "
		echo "   < The report has been rendered > "
		echo "    ------------------------------  "
		echo "           \\   ^__^                "
		echo "            \\  (oo)\\_______        "
		echo "               (__)\\       )\\/\\    "
		echo "                   ||----w |        "
		echo "                   ||     ||        "

	"""






# Note: The stderr/out from rule report should not be shown on screen as it problematically wipes possible interesting fail-outputs from the main asscom2 pipeline.
